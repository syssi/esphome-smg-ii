# See https://github.com/syssi/esphome-smg-ii/issues/102
#
# Kudos to @test3210-d and @witoldo7

substitutions:
  name: li4-emulator
  device_description: "Emulates a LI4 battery bank using modbus_server"
  external_components_source: github://syssi/esphome-jk-bms@main
  mac_address: FF:FF:FF:FF:FF:FF
  protocol_version: JK02_32S

esphome:
  name: ${name}
  comment: ${device_description}
  min_version: 2024.6.0
  project:
    name: "syssi.esphome-smg-ii"
    version: 1.2.0

esp32:
  board: wemos_d1_mini32
  framework:
    type: esp-idf

external_components:
  - source: ${external_components_source}
    refresh: 0s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

ota:
  platform: esphome

logger:
  level: INFO

# If you use Home Assistant please remove this `mqtt` section and uncomment the `api` component!
# The native API has many advantages over MQTT: https://esphome.io/components/api.html#advantages-over-mqtt
mqtt:
  broker: !secret mqtt_host
  username: !secret mqtt_username
  password: !secret mqtt_password
  id: mqtt_client

# api:

uart:
  - id: uart_0
    baud_rate: 9600
    tx_pin: GPIO17
    rx_pin: GPIO16

modbus:
  - uart_id: uart_0
    id: modbus_server
    role: server
    flow_control_pin: GPIO27

modbus_controller:
  - modbus_id: modbus_server
    address: 0x01
    server_registers:
        # Battery Status uint 1 R
        # b[0:4]: Reserved
        # b5: Discharging 0: prohibited 1: allowed
        # b6: Charging 0: prohibited 1: allowed
        # b[7:11]: Reserved
        # b12: Forced charging 0: Normal 1: Strong charge
        # b[13:15]: Reserved
      - address: 19
        value_type: U_WORD
        read_lambda: 'return uint(id(charging_sw).state << 5 | id(discharging_sw).state << 6);'

        # Reserved
      - address: 20
        value_type: S_WORD
        read_lambda: 'return 0;'

        # SOC 1% Int
      - address: 21
        value_type: S_WORD
        read_lambda: 'return int(id(state_of_charge).state);'

        # Battery Voltage Group Average 10mV int 1 R
      - address: 22
        value_type: S_WORD
        read_lambda: 'return int(id(total_voltage).state * 100);'

        # Battery pack current 10mA int 1 R
      - address: 23
        value_type: S_WORD
        read_lambda: 'return int(id(current).state * 100);'

        # Reserved
      - address: 24
        value_type: S_WORD
        read_lambda: 'return 0;'

        # Battery pack maximum charging current 10mA int 1 R
      - address: 25
        value_type: S_WORD
        read_lambda: 'return int(id(max_charge_current).state * 100);'

        # Battery pack remaining capacity 10mAh
      - address: 26
        value_type: S_WORD
        read_lambda: 'return int(id(capacity_remaining).state * 100);'

        # Battery pack capacity Total 10mAh int 1 R
      - address: 27
        value_type: S_WORD
        read_lambda: 'return int(id(total_battery_capacity).state * 100);'

        # Reserved
      - address: 28
        value_type: S_WORD
        read_lambda: 'return 0;'

        # Reserved
      - address: 29
        value_type: S_WORD
        read_lambda: 'return 0;'

        # Reserved
      - address: 30
        value_type: S_WORD
        read_lambda: 'return 0;'

        # Reserved
      - address: 31
        value_type: S_WORD
        read_lambda: 'return 0;'

        # Reserved
      - address: 32
        value_type: S_WORD
        read_lambda: 'return 0;'

        # Battery pack maximum charging voltage 10mV 16s 3,65V
      - address: 33
        value_type: S_WORD
        read_lambda: 'return 58.4*100;'

        # Reserved
      - address: 34
        value_type: S_WORD
        read_lambda: 'return 0;'

        # Maximum discharge current of battery pack 10mA
      - address: 35
        value_type: S_WORD
        read_lambda: 'return int(id(max_discharge_current).state * 100);'

time:
  - platform: sntp

esp32_ble_tracker:
  scan_parameters:
    active: false

ble_client:
  - mac_address: ${mac_address}
    id: client0

jk_bms_ble:
  - ble_client_id: client0
    protocol_version: ${protocol_version}
    throttle: 30s
    id: bms0

sensor:
  - platform: jk_bms_ble
    jk_bms_ble_id: bms0
    delta_cell_voltage:
      name: "delta cell voltage"
    average_cell_voltage:
      name: "average cell voltage"
    total_voltage:
      id: total_voltage
      name: "total voltage"
    current:
      id: current
      name: "current"
    power:
      name: "power"
    charging_power:
      name: "charging power"
    discharging_power:
      name: "discharging power"
    temperature_sensor_1:
      id: temperature_sensor_1
      name: "temperature sensor 1"
    temperature_sensor_2:
      name: "temperature sensor 2"
    power_tube_temperature:
      name: "power tube temperature"
    balancing:
      name: "balancing"
    state_of_charge:
      id: state_of_charge
      name: "state of charge"
    capacity_remaining:
      id: capacity_remaining
      name: "capacity remaining"
    total_battery_capacity_setting:
      name: "total battery capacity setting"
    charging_cycles:
      name: "charging cycles"
    total_charging_cycle_capacity:
      name: "total charging cycle capacity"
    balancing_current:
      name: "balancing current"
    errors_bitmask:
      id: errors_bitmask
      name: "errors bitmask"

switch:
  - platform: jk_bms_ble
    charging:
      name: "charging"
      id: charging_sw
    discharging:
      name: "discharging"
      id: discharging_sw
    balancer:
      name: "balancer"

  - platform: ble_client
    ble_client_id: client0
    id: ble_client_switch0
    name: "enable bluetooth connection"

text_sensor:
  - platform: jk_bms_ble
    errors:
      name: "errors"
    total_runtime_formatted:
      name: "total runtime formatted"

number:
  - platform: jk_bms_ble
    jk_bms_ble_id: bms0
    balance_trigger_voltage:
      name: "balance trigger voltage"
    total_battery_capacity:
      id: total_battery_capacity
      name: "total battery capacity"
    cell_voltage_overvoltage_protection:
      name: "cell voltage overvoltage protection"
    cell_voltage_overvoltage_recovery:
      name: "cell voltage overvoltage recovery"
    cell_voltage_undervoltage_protection:
      name: "cell voltage undervoltage protection"
    cell_voltage_undervoltage_recovery:
      name: "cell voltage undervoltage recovery"
    balance_starting_voltage:
      name: "balance starting voltage"
    voltage_calibration:
      name: "voltage calibration"
    current_calibration:
      name: "current calibration"
    power_off_voltage:
      name: "power off voltage"
    max_balance_current:
      name: "max balance current"
    max_charge_current:
      id: max_charge_current
      name: "max charge current"
    max_discharge_current:
      id: max_discharge_current
      name: "max discharge current"
    charge_overcurrent_protection_delay:
      name: "charge overcurrent protection delay"
    charge_overcurrent_protection_recovery_time:
      name: "charge overcurrent protection recovery time"
    discharge_overcurrent_protection_delay:
      name: "discharge overcurrent protection delay"
    discharge_overcurrent_protection_recovery_time:
      name: "discharge overcurrent protection recovery time"
    short_circuit_protection_delay:
      name: "short circuit protection delay"
    short_circuit_protection_recovery_time:
      name: "short circuit protection recovery time"
    charge_overtemperature_protection:
      name: "charge overtemperature protection"
    charge_overtemperature_protection_recovery:
      name: "charge overtemperature protection recovery"
    discharge_overtemperature_protection:
      name: "discharge overtemperature protection"
    discharge_overtemperature_protection_recovery:
      name: "discharge overtemperature protection recovery"
    charge_undertemperature_protection:
      name: "charge undertemperature protection"
    charge_undertemperature_protection_recovery:
      name: "charge undertemperature protection recovery"
    power_tube_overtemperature_protection:
      name: "power tube overtemperature protection"
    power_tube_overtemperature_protection_recovery:
      name: "power tube overtemperature protection recovery"


binary_sensor:
  - platform: jk_bms_ble
    balancing:
      name: "balancing"
    charging:
      name: "charging"
    discharging:
      name: "discharging"
    heating:
      name: "heating"
    online_status:
      name: "online status"
